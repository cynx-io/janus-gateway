syntax = "proto3";

import "plato/generic.proto";
import "plato/object.proto";
import "buf/validate/validate.proto";
import "core.proto";

package plato;

option go_package = "plato/api/proto";

service PlatoAnswerService {
  rpc GetAnswerById(AnswerIdRequest) returns (AnswerResponse) {}
  rpc GetDetailAnswerById(AnswerIdRequest) returns (DetailAnswerResponse) {}
  rpc ListAnswersByTopicId(TopicIdRequest) returns (ListAnswersResponse) {}
  rpc InsertAnswer(InsertAnswerRequest) returns (AnswerResponse) {}
  rpc UpdateAnswer(UpdateAnswerRequest) returns (AnswerResponse) {}
  rpc DeleteAnswer(AnswerIdRequest) returns (core.GenericResponse) {}

  rpc ListDetailAnswersByTopicId(TopicIdRequest) returns (ListDetailAnswersResponse) {} // Player
  rpc SearchAnswers(SearchAnswersRequest) returns (ListAnswersResponse) {} // Player
}

message SearchAnswersRequest {
  core.BaseRequest   base = 1;
  string query = 2 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 100];

  int32 topic_id = 3;
  int32 mode_id = 4;
}

message ListAnswersResponse {
  core.BaseResponse   base = 1;
  repeated Answer answers = 2;
}

message ListDetailAnswersResponse {
  core.BaseResponse   base = 1;
  repeated DetailAnswer detail_answers = 2;
}

message AnswerResponse {
  core.BaseResponse base = 1;
  Answer answer = 2;
}

message DetailAnswerResponse {
  core.BaseResponse base = 1;
  DetailAnswer detail_answer = 2;
}

message InsertAnswerRequest{
  core.BaseRequest base = 1 [(buf.validate.field).required = true];
  string name= 2;
  optional string icon_url = 3;
  string answer_type = 4; // e.g., "Champion", "Hero", "Pokemon"

  int32 topic_id = 10;
}

message UpdateAnswerRequest{
  core.BaseRequest base = 1 [(buf.validate.field).required = true];
  optional string name= 2;
  optional string icon_url = 3;
  string answer_type = 4; // e.g., "Champion", "Hero", "Pokemon"

  int32 answer_id = 10;
}
