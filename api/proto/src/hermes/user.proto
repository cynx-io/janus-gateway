syntax = "proto3";

package hermes;

option go_package = "hermes/api/proto";

import "google/protobuf/timestamp.proto";

// User service definition
service HermesUserService {
  // Check if a username exists
  rpc CheckUsername(CheckUsernameRequest) returns (CheckUsernameResponse) {}

  // Get user by username
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}

  // Create new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}

  // Paginate users
  rpc PaginateUsers(PaginateRequest) returns (PaginateUsersResponse) {}

  rpc ValidatePassword(ValidatePasswordRequest) returns (ValidatePasswordResponse) {}
}

message BaseRequest {
  // string length 1â€“100
  string request_id = 1;

  string request_origin = 2;

  string request_path = 3;

  // timestamp must be in the past
  google.protobuf.Timestamp timestamp = 4;

  optional int32 user_id = 5;
  optional string username = 6;
}

message BaseResponse {
  string code = 1;
  string desc = 2;
}

// Request message for checking username
message CheckUsernameRequest {
  BaseRequest base = 1;
  string username = 2;
}

// Response message for checking username
message CheckUsernameResponse {
  BaseResponse base = 1;
  bool exists = 2;
}

// Request message for getting user
message GetUserRequest {
  string username = 1;
}

// Response message for getting user
message GetUserResponse {
  BaseResponse base = 1;
  UserData user = 2;
}

// Request message for getting user
message ValidatePasswordRequest {
  string username = 1;
  string password = 2;
}

// Response message for getting user
message ValidatePasswordResponse {
  BaseResponse base = 1;
  UserData user = 2;
}

// Request message for creating user
message CreateUserRequest {
  string username = 1;
  string password = 2;
}

// Response message for creating user
message CreateUserResponse {
  BaseResponse base = 1;
  UserData user = 2;
}

// Request message for paginating users
message PaginateRequest {
  int32 page = 1;
  int32 limit = 2;
  string sort_by = 3;
  string sort_order = 4;
}

// Response message for paginating users
message PaginateUsersResponse {
  BaseResponse base = 1;
  repeated UserData users = 2;
  int32 total = 3;
  int32 page = 4;
  int32 limit = 5;
  int32 total_pages = 6;
}

// User response message
message UserData {
  int32 id = 1;
  string username = 2;
  int32 coin = 3;
  google.protobuf.Timestamp created_date = 4;
  google.protobuf.Timestamp updated_date = 5;
} 