// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file plato/topic.proto (package plato, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InsertTopicRequest, PaginateTopicResponse, TopicResponse, UpdateTopicRequest } from "./topic_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { PaginateRequest, SlugRequest, TopicIdRequest } from "./generic_pb.js";
import { GenericRequest, GenericResponse } from "../core_pb.js";

/**
 * @generated from service plato.PlatoTopicService
 */
export const PlatoTopicService = {
  typeName: "plato.PlatoTopicService",
  methods: {
    /**
     * @generated from rpc plato.PlatoTopicService.InsertTopic
     */
    insertTopic: {
      name: "InsertTopic",
      I: InsertTopicRequest,
      O: TopicResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoTopicService.UpdateTopic
     */
    updateTopic: {
      name: "UpdateTopic",
      I: UpdateTopicRequest,
      O: TopicResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoTopicService.DeleteTopic
     */
    deleteTopic: {
      name: "DeleteTopic",
      I: TopicIdRequest,
      O: GenericResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoTopicService.ListTopicsByUserId
     */
    listTopicsByUserId: {
      name: "ListTopicsByUserId",
      I: GenericRequest,
      O: PaginateTopicResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoTopicService.PaginateTopic
     */
    paginateTopic: {
      name: "PaginateTopic",
      I: PaginateRequest,
      O: PaginateTopicResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoTopicService.GetTopicById
     */
    getTopicById: {
      name: "GetTopicById",
      I: TopicIdRequest,
      O: TopicResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoTopicService.GetTopicBySlug
     */
    getTopicBySlug: {
      name: "GetTopicBySlug",
      I: SlugRequest,
      O: TopicResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

