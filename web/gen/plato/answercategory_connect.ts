// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file plato/answercategory.proto (package plato, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AnswerCategoryIdRequest, AnswerIdRequest } from "./generic_pb.js";
import { AnswerCategoryResponse, InsertAnswerCategoryRequest, ListAnswerCategoriesResponse, UpdateAnswerCategoryRequest } from "./answercategory_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { GenericResponse } from "../core_pb.js";

/**
 * @generated from service plato.PlatoAnswerCategoryService
 */
export const PlatoAnswerCategoryService = {
  typeName: "plato.PlatoAnswerCategoryService",
  methods: {
    /**
     * @generated from rpc plato.PlatoAnswerCategoryService.GetAnswerCategoryById
     */
    getAnswerCategoryById: {
      name: "GetAnswerCategoryById",
      I: AnswerCategoryIdRequest,
      O: AnswerCategoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoAnswerCategoryService.ListAnswerCategoriesByAnswerId
     */
    listAnswerCategoriesByAnswerId: {
      name: "ListAnswerCategoriesByAnswerId",
      I: AnswerIdRequest,
      O: ListAnswerCategoriesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoAnswerCategoryService.InsertAnswerCategory
     */
    insertAnswerCategory: {
      name: "InsertAnswerCategory",
      I: InsertAnswerCategoryRequest,
      O: AnswerCategoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoAnswerCategoryService.UpdateAnswerCategory
     */
    updateAnswerCategory: {
      name: "UpdateAnswerCategory",
      I: UpdateAnswerCategoryRequest,
      O: AnswerCategoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc plato.PlatoAnswerCategoryService.DeleteAnswerCategory
     */
    deleteAnswerCategory: {
      name: "DeleteAnswerCategory",
      I: AnswerCategoryIdRequest,
      O: GenericResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

